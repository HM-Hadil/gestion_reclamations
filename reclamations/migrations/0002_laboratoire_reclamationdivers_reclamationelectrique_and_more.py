# Generated by Django 4.2.19 on 2025-03-27 15:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('reclamations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Laboratoire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ReclamationDivers',
            fields=[
                ('reclamation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='reclamations.reclamation')),
                ('type_probleme', models.CharField(choices=[('tableau_blanc', 'Tableau Blanc'), ('video_projecteur', 'Vidéo Projecteur')], max_length=30)),
                ('etat', models.CharField(choices=[('dysfonctionnement_partiel', 'Dysfonctionnement Partiel'), ('absence', 'Absence'), ('panne', 'Panne Complète')], max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ReclamationElectrique',
            fields=[
                ('reclamation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='reclamations.reclamation')),
                ('type_probleme', models.CharField(choices=[('climatiseur', 'Climatiseur'), ('coupure_courant', 'Coupure de Courant')], max_length=20)),
                ('etat_climatiseur', models.CharField(blank=True, choices=[('dysfonctionnement_partiel', 'Dysfonctionnement Partiel'), ('absence', 'Absence de Climatiseur'), ('panne', 'Panne Complète')], max_length=30, null=True)),
                ('description_climatiseur', models.TextField(blank=True, null=True)),
                ('description_coupure', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReclamationPC',
            fields=[
                ('reclamation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='reclamations.reclamation')),
                ('type_probleme', models.CharField(choices=[('materiel', 'Problème Matériel'), ('logiciel', 'Problème Logiciel')], max_length=20)),
                ('materiel', models.CharField(blank=True, choices=[('clavier', 'Clavier'), ('souris', 'Souris'), ('ecran', 'Écran'), ('imprimante', 'Imprimante'), ('scanner', 'Scanner'), ('carte_reseau', 'Carte Réseau')], max_length=20, null=True)),
                ('logiciel', models.CharField(blank=True, choices=[('connexion_internet', 'Connexion Internet'), ('systeme_exploitation', "Système d'Exploitation"), ('installation', 'Installation Logicielle'), ('antivirus', 'Antivirus')], max_length=20, null=True)),
                ('details_probleme', models.TextField()),
            ],
        ),
        migrations.RemoveField(
            model_name='reclamation',
            name='type_reclamation',
        ),
        migrations.AddField(
            model_name='reclamation',
            name='lieu',
            field=models.CharField(choices=[('labo', 'Laboratoire'), ('salle', 'Salle'), ('bureau', 'Bureau')], default='bureau', max_length=20),
        ),
        migrations.AddField(
            model_name='reclamation',
            name='laboratoire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reclamations.laboratoire'),
        ),
    ]
